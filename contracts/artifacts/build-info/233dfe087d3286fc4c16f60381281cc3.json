{
	"id": "233dfe087d3286fc4c16f60381281cc3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/8_FallbackVerLes7.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\npragma solidity >=0.5.0 <0.7.0;\n\ncontract Test {\n    // This function is called for all messages sent to\n    // this contract (there is no other function).\n    // Sending Ether to this contract will cause an exception,\n    // because the fallback function does not have the `payable`\n    // modifier.\n    function() external { x = 1; }\n    uint public x;\n}\n\n\n// This contract keeps all Ether sent to it with no way\n// to get it back.\ncontract Sink {\n    function() external payable { }\n}\n\ncontract Caller {\n    function callTest(Test test) public returns (bool) {\n        (bool success,) = address(test).call(abi.encodeWithSignature(\"nonExistingFunction()\"));\n        require(success);\n        // results in test.x becoming == 1.\n\n        // address(test) will not allow to call ``send`` directly, since ``test`` has no payable\n        // fallback function. It has to be converted to the ``address payable`` type via an\n        // intermediate conversion to ``uint160`` to even allow calling ``send`` on it.\n        address payable testPayable = address(uint160(address(test)));\n\n        // If someone sends ether to that contract,\n        // the transfer will fail, i.e. this returns false here.\n        return testPayable.send(2 ether);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/8_FallbackVerLes7.sol": {
				"Caller": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "contract Test",
									"name": "test",
									"type": "address"
								}
							],
							"name": "callTest",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/8_FallbackVerLes7.sol\":525:1282  contract Caller {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/8_FallbackVerLes7.sol\":525:1282  contract Caller {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/8_FallbackVerLes7.sol\":525:1282  contract Caller {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/8_FallbackVerLes7.sol\":525:1282  contract Caller {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x32eb12f1\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/8_FallbackVerLes7.sol\":547:1280  function callTest(Test test) public returns (bool) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_5:\n        /* \"contracts/8_FallbackVerLes7.sol\":547:1280  function callTest(Test test) public returns (bool) {... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_6\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"contracts/8_FallbackVerLes7.sol\":592:596  bool */\n      0x00\n        /* \"contracts/8_FallbackVerLes7.sol\":609:621  bool success */\n      dup1\n        /* \"contracts/8_FallbackVerLes7.sol\":634:638  test */\n      dup3\n        /* \"contracts/8_FallbackVerLes7.sol\":626:644  address(test).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/8_FallbackVerLes7.sol\":645:693  abi.encodeWithSignature(\"nonExistingFunction()\") */\n      add(0x24, mload(0x40))\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"contracts/8_FallbackVerLes7.sol\":645:693  abi.encodeWithSignature(\"nonExistingFunction()\") */\n      swap1\n      0x40\n      mstore\n      and(not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff), 0xf85396d700000000000000000000000000000000000000000000000000000000)\n        /* \"--CODEGEN--\":38:42   */\n      0x20\n        /* \"--CODEGEN--\":29:36   */\n      dup3\n        /* \"--CODEGEN--\":25:43   */\n      add\n        /* \"--CODEGEN--\":67:77   */\n      dup1\n        /* \"--CODEGEN--\":61:78   */\n      mload\n        /* \"--CODEGEN--\":96:154   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"--CODEGEN--\":199:207   */\n      dup4\n        /* \"--CODEGEN--\":192:196   */\n      dup2\n        /* \"--CODEGEN--\":186:190   */\n      dup4\n        /* \"--CODEGEN--\":182:197   */\n      and\n        /* \"--CODEGEN--\":179:208   */\n      or\n        /* \"--CODEGEN--\":167:177   */\n      dup4\n        /* \"--CODEGEN--\":160:209   */\n      mstore\n        /* \"--CODEGEN--\":0:215   */\n      pop\n      pop\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":645:693  abi.encodeWithSignature(\"nonExistingFunction()\") */\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":626:694  address(test).call(abi.encodeWithSignature(\"nonExistingFunction()\")) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n        /* \"--CODEGEN--\":36:189   */\n    tag_8:\n        /* \"--CODEGEN--\":66:68   */\n      0x20\n        /* \"--CODEGEN--\":61:64   */\n      dup4\n        /* \"--CODEGEN--\":58:69   */\n      lt\n        /* \"--CODEGEN--\":36:189   */\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":182:185   */\n      dup1\n        /* \"--CODEGEN--\":176:186   */\n      mload\n        /* \"--CODEGEN--\":171:174   */\n      dup3\n        /* \"--CODEGEN--\":164:187   */\n      mstore\n        /* \"--CODEGEN--\":98:100   */\n      0x20\n        /* \"--CODEGEN--\":93:96   */\n      dup3\n        /* \"--CODEGEN--\":89:101   */\n      add\n        /* \"--CODEGEN--\":82:101   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":123:125   */\n      0x20\n        /* \"--CODEGEN--\":118:121   */\n      dup2\n        /* \"--CODEGEN--\":114:126   */\n      add\n        /* \"--CODEGEN--\":107:126   */\n      swap1\n      pop\n        /* \"--CODEGEN--\":148:150   */\n      0x20\n        /* \"--CODEGEN--\":143:146   */\n      dup4\n        /* \"--CODEGEN--\":139:151   */\n      sub\n        /* \"--CODEGEN--\":132:151   */\n      swap3\n      pop\n        /* \"--CODEGEN--\":36:189   */\n      jump(tag_8)\n    tag_10:\n        /* \"--CODEGEN--\":274:275   */\n      0x01\n        /* \"--CODEGEN--\":267:270   */\n      dup4\n        /* \"--CODEGEN--\":263:265   */\n      0x20\n        /* \"--CODEGEN--\":259:271   */\n      sub\n        /* \"--CODEGEN--\":254:257   */\n      0x0100\n        /* \"--CODEGEN--\":250:272   */\n      exp\n        /* \"--CODEGEN--\":246:276   */\n      sub\n        /* \"--CODEGEN--\":315:319   */\n      dup1\n        /* \"--CODEGEN--\":311:320   */\n      not\n        /* \"--CODEGEN--\":305:308   */\n      dup3\n        /* \"--CODEGEN--\":299:309   */\n      mload\n        /* \"--CODEGEN--\":295:321   */\n      and\n        /* \"--CODEGEN--\":356:360   */\n      dup2\n        /* \"--CODEGEN--\":350:353   */\n      dup5\n        /* \"--CODEGEN--\":344:354   */\n      mload\n        /* \"--CODEGEN--\":340:361   */\n      and\n        /* \"--CODEGEN--\":389:396   */\n      dup1\n        /* \"--CODEGEN--\":380:387   */\n      dup3\n        /* \"--CODEGEN--\":377:397   */\n      or\n        /* \"--CODEGEN--\":372:375   */\n      dup6\n        /* \"--CODEGEN--\":365:398   */\n      mstore\n        /* \"--CODEGEN--\":3:402   */\n      pop\n      pop\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":626:694  address(test).call(abi.encodeWithSignature(\"nonExistingFunction()\")) */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n        /* \"--CODEGEN--\":14:15   */\n      dup1\n        /* \"--CODEGEN--\":21:22   */\n      0x00\n        /* \"--CODEGEN--\":16:47   */\n      dup2\n      eq\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":75:79   */\n      0x40\n        /* \"--CODEGEN--\":69:80   */\n      mload\n        /* \"--CODEGEN--\":64:80   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":144:148   */\n      0x1f\n        /* \"--CODEGEN--\":140:149   */\n      not\n        /* \"--CODEGEN--\":133:137   */\n      0x3f\n        /* \"--CODEGEN--\":115:131   */\n      returndatasize\n        /* \"--CODEGEN--\":111:138   */\n      add\n        /* \"--CODEGEN--\":107:150   */\n      and\n        /* \"--CODEGEN--\":104:105   */\n      dup3\n        /* \"--CODEGEN--\":100:151   */\n      add\n        /* \"--CODEGEN--\":94:98   */\n      0x40\n        /* \"--CODEGEN--\":87:152   */\n      mstore\n        /* \"--CODEGEN--\":169:185   */\n      returndatasize\n        /* \"--CODEGEN--\":166:167   */\n      dup3\n        /* \"--CODEGEN--\":159:186   */\n      mstore\n        /* \"--CODEGEN--\":225:241   */\n      returndatasize\n        /* \"--CODEGEN--\":222:223   */\n      0x00\n        /* \"--CODEGEN--\":215:219   */\n      0x20\n        /* \"--CODEGEN--\":212:213   */\n      dup5\n        /* \"--CODEGEN--\":208:220   */\n      add\n        /* \"--CODEGEN--\":193:242   */\n      returndatacopy\n        /* \"--CODEGEN--\":7:249   */\n      jump(tag_11)\n        /* \"--CODEGEN--\":16:47   */\n    tag_12:\n        /* \"--CODEGEN--\":36:40   */\n      0x60\n        /* \"--CODEGEN--\":31:40   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":7:249   */\n    tag_11:\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":608:694  (bool success,) = address(test).call(abi.encodeWithSignature(\"nonExistingFunction()\")) */\n      pop\n      swap1\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":712:719  success */\n      dup1\n        /* \"contracts/8_FallbackVerLes7.sol\":704:720  require(success) */\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n        /* \"contracts/8_FallbackVerLes7.sol\":1052:1079  address payable testPayable */\n      0x00\n        /* \"contracts/8_FallbackVerLes7.sol\":1106:1110  test */\n      dup4\n        /* \"contracts/8_FallbackVerLes7.sol\":1052:1113  address payable testPayable = address(uint160(address(test))) */\n      swap1\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":1248:1259  testPayable */\n      dup1\n        /* \"contracts/8_FallbackVerLes7.sol\":1248:1264  testPayable.send */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/8_FallbackVerLes7.sol\":1248:1273  testPayable.send(2 ether) */\n      0x08fc\n        /* \"contracts/8_FallbackVerLes7.sol\":1265:1272  2 ether */\n      0x1bc16d674ec80000\n        /* \"contracts/8_FallbackVerLes7.sol\":1248:1273  testPayable.send(2 ether) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":1241:1273  return testPayable.send(2 ether) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":547:1280  function callTest(Test test) public returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820a44512526dedd385a295f711e9c34b9940d62bb1237b4e8686c5d7e6ae251b6e64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610251806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806332eb12f114610030575b600080fd5b6100726004803603602081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061008c565b604051808215151515815260200191505060405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527ff85396d7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061015c5780518252602082019150602081019050602083039250610139565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146101be576040519150601f19603f3d011682016040523d82523d6000602084013e6101c3565b606091505b50509050806101d157600080fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f193505050509250505091905056fea265627a7a72315820a44512526dedd385a295f711e9c34b9940d62bb1237b4e8686c5d7e6ae251b6e64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x251 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x32EB12F1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xF85396D700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x15C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG4 GASLIMIT SLT MSTORE PUSH14 0xEDD385A295F711E9C34B9940D62B 0xB1 0x23 PUSH28 0x4E8686C5D7E6AE251B6E64736F6C6343000510003200000000000000 ",
							"sourceMap": "525:757:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;525:757:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c806332eb12f114610030575b600080fd5b6100726004803603602081101561004657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061008c565b604051808215151515815260200191505060405180910390f35b6000808273ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527ff85396d7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061015c5780518252602082019150602081019050602083039250610139565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146101be576040519150601f19603f3d011682016040523d82523d6000602084013e6101c3565b606091505b50509050806101d157600080fd5b60008390508073ffffffffffffffffffffffffffffffffffffffff166108fc671bc16d674ec800009081150290604051600060405180830381858888f193505050509250505091905056fea265627a7a72315820a44512526dedd385a295f711e9c34b9940d62bb1237b4e8686c5d7e6ae251b6e64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x32EB12F1 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x72 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH32 0xF85396D700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x15C JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x139 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1BE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC PUSH8 0x1BC16D674EC80000 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 LOG4 GASLIMIT SLT MSTORE PUSH14 0xEDD385A295F711E9C34B9940D62B 0xB1 0x23 PUSH28 0x4E8686C5D7E6AE251B6E64736F6C6343000510003200000000000000 ",
							"sourceMap": "525:757:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;525:757:0;;;;;;;;;;;;;;;;;;;547:733;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;547:733:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;592:4;609:12;634:4;626:18;;645:48;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;645:48:0;;;;;;;38:4:-1;29:7;25:18;67:10;61:17;96:58;199:8;192:4;186;182:15;179:29;167:10;160:49;0:215;;;645:48:0;626:68;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;626:68:0;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;608:86:0;;;712:7;704:16;;;;;;1052:27;1106:4;1052:61;;1248:11;:16;;:25;1265:7;1248:25;;;;;;;;;;;;;;;;;;;;;;;1241:32;;;;547:733;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "118600",
								"executionCost": "165",
								"totalCost": "118765"
							},
							"external": {
								"callTest(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 525,
									"end": 1282,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "MSTORE"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "POP"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "DUP1"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "CODECOPY"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 525,
									"end": 1282,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820a44512526dedd385a295f711e9c34b9940d62bb1237b4e8686c5d7e6ae251b6e64736f6c63430005100032",
									".code": [
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "MSTORE"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "POP"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "LT"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "JUMPI"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "SHR"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH",
											"value": "32EB12F1"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "EQ"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "JUMPI"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "JUMPDEST"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "DUP1"
										},
										{
											"begin": 525,
											"end": 1282,
											"name": "REVERT"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "JUMPDEST"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "AND"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP3"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "JUMPDEST"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "MLOAD"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP3"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "ISZERO"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "ISZERO"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "ISZERO"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "ISZERO"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "MLOAD"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SUB"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "RETURN"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "JUMPDEST"
										},
										{
											"begin": 592,
											"end": 596,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 609,
											"end": 621,
											"name": "DUP1"
										},
										{
											"begin": 634,
											"end": 638,
											"name": "DUP3"
										},
										{
											"begin": 626,
											"end": 644,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 626,
											"end": 644,
											"name": "AND"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "MLOAD"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "ADD"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "MLOAD"
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2"
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "SWAP1"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "MSTORE"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"value": "F85396D700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "NOT"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "AND"
										},
										{
											"begin": 38,
											"end": 42,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 29,
											"end": 36,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 43,
											"name": "ADD"
										},
										{
											"begin": 67,
											"end": 77,
											"name": "DUP1"
										},
										{
											"begin": 61,
											"end": 78,
											"name": "MLOAD"
										},
										{
											"begin": 96,
											"end": 154,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 199,
											"end": 207,
											"name": "DUP4"
										},
										{
											"begin": 192,
											"end": 196,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 190,
											"name": "DUP4"
										},
										{
											"begin": 182,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 179,
											"end": 208,
											"name": "OR"
										},
										{
											"begin": 167,
											"end": 177,
											"name": "DUP4"
										},
										{
											"begin": 160,
											"end": 209,
											"name": "MSTORE"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 215,
											"name": "POP"
										},
										{
											"begin": 645,
											"end": 693,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP3"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP4"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP4"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 66,
											"end": 68,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 61,
											"end": 64,
											"name": "DUP4"
										},
										{
											"begin": 58,
											"end": 69,
											"name": "LT"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPI"
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 176,
											"end": 186,
											"name": "MLOAD"
										},
										{
											"begin": 171,
											"end": 174,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 187,
											"name": "MSTORE"
										},
										{
											"begin": 98,
											"end": 100,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 93,
											"end": 96,
											"name": "DUP3"
										},
										{
											"begin": 89,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "SWAP2"
										},
										{
											"begin": 82,
											"end": 101,
											"name": "POP"
										},
										{
											"begin": 123,
											"end": 125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 118,
											"end": 121,
											"name": "DUP2"
										},
										{
											"begin": 114,
											"end": 126,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "SWAP1"
										},
										{
											"begin": 107,
											"end": 126,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 146,
											"name": "DUP4"
										},
										{
											"begin": 139,
											"end": 151,
											"name": "SUB"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "SWAP3"
										},
										{
											"begin": 132,
											"end": 151,
											"name": "POP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMP"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 36,
											"end": 189,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 275,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 267,
											"end": 270,
											"name": "DUP4"
										},
										{
											"begin": 263,
											"end": 265,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 259,
											"end": 271,
											"name": "SUB"
										},
										{
											"begin": 254,
											"end": 257,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 250,
											"end": 272,
											"name": "EXP"
										},
										{
											"begin": 246,
											"end": 276,
											"name": "SUB"
										},
										{
											"begin": 315,
											"end": 319,
											"name": "DUP1"
										},
										{
											"begin": 311,
											"end": 320,
											"name": "NOT"
										},
										{
											"begin": 305,
											"end": 308,
											"name": "DUP3"
										},
										{
											"begin": 299,
											"end": 309,
											"name": "MLOAD"
										},
										{
											"begin": 295,
											"end": 321,
											"name": "AND"
										},
										{
											"begin": 356,
											"end": 360,
											"name": "DUP2"
										},
										{
											"begin": 350,
											"end": 353,
											"name": "DUP5"
										},
										{
											"begin": 344,
											"end": 354,
											"name": "MLOAD"
										},
										{
											"begin": 340,
											"end": 361,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 396,
											"name": "DUP1"
										},
										{
											"begin": 380,
											"end": 387,
											"name": "DUP3"
										},
										{
											"begin": 377,
											"end": 397,
											"name": "OR"
										},
										{
											"begin": 372,
											"end": 375,
											"name": "DUP6"
										},
										{
											"begin": 365,
											"end": 398,
											"name": "MSTORE"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 3,
											"end": 402,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "ADD"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "MLOAD"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP1"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP4"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "SUB"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "DUP7"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "GAS"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "CALL"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "SWAP2"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 626,
											"end": 694,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 14,
											"end": 15,
											"name": "DUP1"
										},
										{
											"begin": 21,
											"end": 22,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "DUP2"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "EQ"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPI"
										},
										{
											"begin": 75,
											"end": 79,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 80,
											"name": "MLOAD"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "SWAP2"
										},
										{
											"begin": 64,
											"end": 80,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 148,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 140,
											"end": 149,
											"name": "NOT"
										},
										{
											"begin": 133,
											"end": 137,
											"name": "PUSH",
											"value": "3F"
										},
										{
											"begin": 115,
											"end": 131,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 111,
											"end": 138,
											"name": "ADD"
										},
										{
											"begin": 107,
											"end": 150,
											"name": "AND"
										},
										{
											"begin": 104,
											"end": 105,
											"name": "DUP3"
										},
										{
											"begin": 100,
											"end": 151,
											"name": "ADD"
										},
										{
											"begin": 94,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 87,
											"end": 152,
											"name": "MSTORE"
										},
										{
											"begin": 169,
											"end": 185,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP3"
										},
										{
											"begin": 159,
											"end": 186,
											"name": "MSTORE"
										},
										{
											"begin": 225,
											"end": 241,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 222,
											"end": 223,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 215,
											"end": 219,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 212,
											"end": 213,
											"name": "DUP5"
										},
										{
											"begin": 208,
											"end": 220,
											"name": "ADD"
										},
										{
											"begin": 193,
											"end": 242,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMP"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 16,
											"end": 47,
											"name": "JUMPDEST"
										},
										{
											"begin": 36,
											"end": 40,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "SWAP2"
										},
										{
											"begin": 31,
											"end": 40,
											"name": "POP"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "JUMPDEST"
										},
										{
											"begin": 7,
											"end": 249,
											"name": "POP"
										},
										{
											"begin": 608,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 608,
											"end": 694,
											"name": "SWAP1"
										},
										{
											"begin": 608,
											"end": 694,
											"name": "POP"
										},
										{
											"begin": 712,
											"end": 719,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 720,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 704,
											"end": 720,
											"name": "JUMPI"
										},
										{
											"begin": 704,
											"end": 720,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 704,
											"end": 720,
											"name": "DUP1"
										},
										{
											"begin": 704,
											"end": 720,
											"name": "REVERT"
										},
										{
											"begin": 704,
											"end": 720,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 704,
											"end": 720,
											"name": "JUMPDEST"
										},
										{
											"begin": 1052,
											"end": 1079,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1106,
											"end": 1110,
											"name": "DUP4"
										},
										{
											"begin": 1052,
											"end": 1113,
											"name": "SWAP1"
										},
										{
											"begin": 1052,
											"end": 1113,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1259,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "AND"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "PUSH",
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "ISZERO"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "MUL"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "SWAP1"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "MLOAD"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP1"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP4"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "SUB"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP2"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP6"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP9"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "DUP9"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "CALL"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "SWAP4"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "POP"
										},
										{
											"begin": 1248,
											"end": 1273,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1273,
											"name": "SWAP3"
										},
										{
											"begin": 1241,
											"end": 1273,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1273,
											"name": "POP"
										},
										{
											"begin": 1241,
											"end": 1273,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP2"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "POP"
										},
										{
											"begin": 547,
											"end": 1280,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"callTest(address)": "32eb12f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"internalType\":\"contract Test\",\"name\":\"test\",\"type\":\"address\"}],\"name\":\"callTest\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/8_FallbackVerLes7.sol\":\"Caller\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/8_FallbackVerLes7.sol\":{\"keccak256\":\"0x2dce04e4d15c90685da4a14ccf8b36d18d73b518a09e5afa727f79f81ca723ac\",\"urls\":[\"bzz-raw://e4477e95f82baccbcfa193584c7b2c6acfff206c93e6633a6a889be66755409e\",\"dweb:/ipfs/QmbAo53ydd9WqZvTscXrf8Uxjgi9y4vVy3gUYQnVnBZniL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Sink": {
					"abi": [
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/8_FallbackVerLes7.sol\":470:523  contract Sink {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/8_FallbackVerLes7.sol\":470:523  contract Sink {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/8_FallbackVerLes7.sol\":470:523  contract Sink {... */\n      mstore(0x40, 0x80)\n      stop\n\n    auxdata: 0xa265627a7a723158206095ac54b69b54428f9132561f631543ca8fa495f14f9001817e4a5537926c9964736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603b80601d6000396000f3fe608060405200fea265627a7a723158206095ac54b69b54428f9132561f631543ca8fa495f14f9001817e4a5537926c9964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3B DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH1 0x95 0xAC SLOAD 0xB6 SWAP12 SLOAD TIMESTAMP DUP16 SWAP2 ORIGIN JUMP 0x1F PUSH4 0x1543CA8F LOG4 SWAP6 CALL 0x4F SWAP1 ADD DUP2 PUSH31 0x4A5537926C9964736F6C634300051000320000000000000000000000000000 ",
							"sourceMap": "470:53:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;470:53:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405200fea265627a7a723158206095ac54b69b54428f9132561f631543ca8fa495f14f9001817e4a5537926c9964736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE STOP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 PUSH1 0x95 0xAC SLOAD 0xB6 SWAP12 SLOAD TIMESTAMP DUP16 SWAP2 ORIGIN JUMP 0x1F PUSH4 0x1543CA8F LOG4 SWAP6 CALL 0x4F SWAP1 ADD DUP2 PUSH31 0x4A5537926C9964736F6C634300051000320000000000000000000000000000 ",
							"sourceMap": "470:53:0:-;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "11800",
								"executionCost": "66",
								"totalCost": "11866"
							},
							"external": {
								"": "18"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 470,
									"end": 523,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "MSTORE"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "POP"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "DUP1"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "CODECOPY"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 470,
									"end": 523,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158206095ac54b69b54428f9132561f631543ca8fa495f14f9001817e4a5537926c9964736f6c63430005100032",
									".code": [
										{
											"begin": 470,
											"end": 523,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 470,
											"end": 523,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 470,
											"end": 523,
											"name": "MSTORE"
										},
										{
											"begin": 470,
											"end": 523,
											"name": "STOP"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/8_FallbackVerLes7.sol\":\"Sink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/8_FallbackVerLes7.sol\":{\"keccak256\":\"0x2dce04e4d15c90685da4a14ccf8b36d18d73b518a09e5afa727f79f81ca723ac\",\"urls\":[\"bzz-raw://e4477e95f82baccbcfa193584c7b2c6acfff206c93e6633a6a889be66755409e\",\"dweb:/ipfs/QmbAo53ydd9WqZvTscXrf8Uxjgi9y4vVy3gUYQnVnBZniL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				},
				"Test": {
					"abi": [
						{
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "fallback"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "x",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/8_FallbackVerLes7.sol\":69:392  contract Test {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/8_FallbackVerLes7.sol\":69:392  contract Test {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/8_FallbackVerLes7.sol\":69:392  contract Test {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/8_FallbackVerLes7.sol\":69:392  contract Test {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0c55699c\n      eq\n      tag_3\n      jumpi\n    tag_2:\n        /* \"contracts/8_FallbackVerLes7.sol\":367:368  1 */\n      0x01\n        /* \"contracts/8_FallbackVerLes7.sol\":363:364  x */\n      0x00\n        /* \"contracts/8_FallbackVerLes7.sol\":363:368  x = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/8_FallbackVerLes7.sol\":69:392  contract Test {... */\n      stop\n        /* \"contracts/8_FallbackVerLes7.sol\":376:389  uint public x */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n      sload(0x00)\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72315820cef50b833184c0ae1d83bb441eb6f90ff964f025c7141a1d99dd0233c9308e2764736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b5060898061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80630c55699c146032575b6001600081905550005b6038604e565b6040518082815260200191505060405180910390f35b6000548156fea265627a7a72315820cef50b833184c0ae1d83bb441eb6f90ff964f025c7141a1d99dd0233c9308e2764736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x89 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH1 0x32 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x38 PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCE CREATE2 SIGNEXTEND DUP4 BALANCE DUP5 0xC0 0xAE SAR DUP4 0xBB DIFFICULTY 0x1E 0xB6 0xF9 0xF 0xF9 PUSH5 0xF025C7141A SAR SWAP10 0xDD MUL CALLER 0xC9 ADDRESS DUP15 0x27 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "69:323:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:323:0;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80630c55699c146032575b6001600081905550005b6038604e565b6040518082815260200191505060405180910390f35b6000548156fea265627a7a72315820cef50b833184c0ae1d83bb441eb6f90ff964f025c7141a1d99dd0233c9308e2764736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC55699C EQ PUSH1 0x32 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP STOP JUMPDEST PUSH1 0x38 PUSH1 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xCE CREATE2 SIGNEXTEND DUP4 BALANCE DUP5 0xC0 0xAE SAR DUP4 0xBB DIFFICULTY 0x1E 0xB6 0xF9 0xF 0xF9 PUSH5 0xF025C7141A SAR SWAP10 0xDD MUL CALLER 0xC9 ADDRESS DUP15 0x27 PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "69:323:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;69:323:0;;;;;;;;;;;;;;;;367:1;363;:5;;;;69:323;376:13;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "27400",
								"executionCost": "81",
								"totalCost": "27481"
							},
							"external": {
								"": "20112",
								"x()": "983"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 69,
									"end": 392,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "MSTORE"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "POP"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "DUP1"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "CODECOPY"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 69,
									"end": 392,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820cef50b833184c0ae1d83bb441eb6f90ff964f025c7141a1d99dd0233c9308e2764736f6c63430005100032",
									".code": [
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "MSTORE"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "POP"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "LT"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "JUMPI"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "SHR"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "DUP1"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH",
											"value": "C55699C"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "EQ"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "JUMPI"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "JUMPDEST"
										},
										{
											"begin": 367,
											"end": 368,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 363,
											"end": 364,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 363,
											"end": 368,
											"name": "DUP2"
										},
										{
											"begin": 363,
											"end": 368,
											"name": "SWAP1"
										},
										{
											"begin": 363,
											"end": 368,
											"name": "SSTORE"
										},
										{
											"begin": 363,
											"end": 368,
											"name": "POP"
										},
										{
											"begin": 69,
											"end": 392,
											"name": "STOP"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "MLOAD"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "DUP1"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "DUP3"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "DUP2"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "MSTORE"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "ADD"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "SWAP2"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "POP"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "POP"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "MLOAD"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "DUP1"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "SWAP2"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "SUB"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "SWAP1"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "RETURN"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "JUMPDEST"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "SLOAD"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "DUP2"
										},
										{
											"begin": 376,
											"end": 389,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"x()": "0c55699c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"constant\":true,\"inputs\":[],\"name\":\"x\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/8_FallbackVerLes7.sol\":\"Test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/8_FallbackVerLes7.sol\":{\"keccak256\":\"0x2dce04e4d15c90685da4a14ccf8b36d18d73b518a09e5afa727f79f81ca723ac\",\"urls\":[\"bzz-raw://e4477e95f82baccbcfa193584c7b2c6acfff206c93e6633a6a889be66755409e\",\"dweb:/ipfs/QmbAo53ydd9WqZvTscXrf8Uxjgi9y4vVy3gUYQnVnBZniL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "contracts/8_FallbackVerLes7.sol:Test",
								"label": "x",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/8_FallbackVerLes7.sol": {
				"ast": {
					"absolutePath": "contracts/8_FallbackVerLes7.sol",
					"exportedSymbols": {
						"Caller": [
							57
						],
						"Sink": [
							17
						],
						"Test": [
							12
						]
					},
					"id": 58,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 12,
							"linearizedBaseContracts": [
								12
							],
							"name": "Test",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 8,
										"nodeType": "Block",
										"src": "361:10:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 6,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 4,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "363:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 5,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "367:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "363:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 7,
												"nodeType": "ExpressionStatement",
												"src": "363:5:0"
											}
										]
									},
									"documentation": null,
									"id": 9,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:0"
									},
									"returnParameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "361:0:0"
									},
									"scope": 12,
									"src": "341:30:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"constant": false,
									"id": 11,
									"name": "x",
									"nodeType": "VariableDeclaration",
									"scope": 12,
									"src": "376:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "376:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								}
							],
							"scope": 58,
							"src": "69:323:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 17,
							"linearizedBaseContracts": [
								17
							],
							"name": "Sink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "518:3:0",
										"statements": []
									},
									"documentation": null,
									"id": 16,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "518:0:0"
									},
									"scope": 17,
									"src": "490:31:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "470:53:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "Caller",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "598:682:0",
										"statements": [
											{
												"assignments": [
													25,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 25,
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "609:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 24,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "609:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 35,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "6e6f6e4578697374696e6746756e6374696f6e2829",
																	"id": 32,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "669:23:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f85396d7e9689a053a49a30897f2c19bba3466254a7da410091b401b6ce6b398",
																		"typeString": "literal_string \"nonExistingFunction()\""
																	},
																	"value": "nonExistingFunction()"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_f85396d7e9689a053a49a30897f2c19bba3466254a7da410091b401b6ce6b398",
																		"typeString": "literal_string \"nonExistingFunction()\""
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 30,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 59,
																	"src": "645:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 31,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSignature",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "645:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (string memory) pure returns (bytes memory)"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "645:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 27,
																	"name": "test",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 19,
																	"src": "634:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Test_$12",
																		"typeString": "contract Test"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Test_$12",
																		"typeString": "contract Test"
																	}
																],
																"id": 26,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "626:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "626:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 29,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "626:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "626:68:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "608:86:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 37,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "712:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 36,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															75,
															76
														],
														"referencedDeclaration": 75,
														"src": "704:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "704:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "704:16:0"
											},
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"name": "testPayable",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "1052:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 40,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1052:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 45,
																			"name": "test",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 19,
																			"src": "1106:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Test_$12",
																				"typeString": "contract Test"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Test_$12",
																				"typeString": "contract Test"
																			}
																		],
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1098:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1098:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 43,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1090:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": "uint160"
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1090:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1082:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": "address"
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1082:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1052:61:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "32",
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1265:7:0",
															"subdenomination": "ether",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 50,
															"name": "testPayable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "1248:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "send",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1248:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (uint256) returns (bool)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1248:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 23,
												"id": 54,
												"nodeType": "Return",
												"src": "1241:32:0"
											}
										]
									},
									"documentation": null,
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "callTest",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"name": "test",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "565:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_Test_$12",
													"typeString": "contract Test"
												},
												"typeName": {
													"contractScope": null,
													"id": 18,
													"name": "Test",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "565:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Test_$12",
														"typeString": "contract Test"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "564:11:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "592:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 21,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "591:6:0"
									},
									"scope": 57,
									"src": "547:733:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 58,
							"src": "525:757:0"
						}
					],
					"src": "36:1246:0"
				},
				"id": 0
			}
		}
	}
}